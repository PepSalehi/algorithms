#include <opencv/cv.h>
#include <opencv/highgui.h>

using namespace std;

int main(int argc, char const *argv[])
{
    float e_values_f[100] = {16014983., 6.79554250e+06, 6.21462650e+06, 4.24940650e+06,
       2831996., 2.49573075e+06, 1.56753675e+06, 1.41356775e+06,
       1.38131050e+06, 1.04603431e+06, 8.42411375e+05, 8.07922375e+05,
       7.73619062e+05, 7.16859500e+05, 6.82046688e+05, 5.34118938e+05,
       5.15627500e+05, 4.79177938e+05, 4.60453656e+05, 4.50402531e+05,
       4.21884281e+05, 3.84481812e+05, 3.56337438e+05, 3.45271500e+05,
       3.27611281e+05, 2.98269938e+05, 2.89390812e+05, 2.63379562e+05,
       2.49994750e+05, 2.43468219e+05, 2.36182422e+05, 2.30379359e+05,
       2.18300703e+05, 2.13195156e+05, 2.02492391e+05, 1.93513250e+05,
       1.89119922e+05, 1.82835391e+05, 1.77268875e+05, 1.71849594e+05,
       1.67030656e+05, 1.62886344e+05, 1.56951203e+05, 1.49877891e+05,
       1.43746281e+05, 1.39821406e+05, 1.33691953e+05, 1.31348766e+05,
       1.24477984e+05, 1.23501273e+05, 1.21633281e+05, 1.18039844e+05,
       1.17673664e+05, 1.14429445e+05, 1.12307422e+05, 1.10264555e+05,
       1.07995578e+05, 1.05644984e+05, 1.02211148e+05, 9.98207500e+04,
       9.92656641e+04, 9.40132969e+04, 9.30486406e+04, 9.09329297e+04,
       8.90066016e+04, 8.81929609e+04, 8.49244375e+04, 8.23161641e+04,
       8.17241953e+04, 7.97260312e+04, 7.82079844e+04, 7.63141719e+04,
       7.39095703e+04, 7.31701016e+04, 7.26410391e+04, 7.19424141e+04,
       7.06506953e+04, 6.91207969e+04, 6.88068594e+04, 6.71851875e+04,
       6.63042344e+04, 6.55803047e+04, 6.52318672e+04, 6.42881250e+04,
       6.24365664e+04, 6.19550352e+04, 6.06177617e+04, 6.02258125e+04,
       5.94433281e+04, 5.85862891e+04, 5.73015703e+04, 5.57878984e+04,
       5.50352891e+04, 5.44500820e+04, 5.36843516e+04, 5.27438281e+04,
       5.21636367e+04, 5.13860273e+04, 5.06890391e+04, 4.95440273e+04};
    cv::Mat e_values;

    int rows = 100;
    int cols = 2;
    e_values = cv::Mat(rows, cols, CV_32FC1, &e_values_f);

    // Print
    for (int x = 0; x < rows; ++x)
    {
        for (int y = 0; y < cols; ++y)
        {
            cout << "M(x="<< x << ", y=" << y << ") = " << e_values.at<float>(x, y) << endl;
        }
    }

    return 0;
}